# this opens a file named imgs.txt

import subprocess                       # for executing bash code from python
import pandas as pd                     # for working with dataframes
from datetime import date               # for obtaining current date
import json
from pandas import json_normalize

import gc


# define filenames
Downloaded_Report_name = "vulnerability-report-kaptain-main.csv"
Resulting_Report_name = f"vulnerability-report-kaptain-{date.today()}.csv"


# declare variables
Final_Results_df = pd.DataFrame()


# load initial report
Downloaded_Report_df = pd.read_csv(Downloaded_Report_name, header=0)


# clean data
Downloaded_Report_list = Downloaded_Report_df['resource_purl'].drop_duplicates().values.tolist()
Filtered_image_list = [k for k in Downloaded_Report_list if 'mesosphere' in k]
Filtered_image_list = [s.replace("pkg:docker/", "") for s in Filtered_image_list]
Filtered_image_list = [s.replace("@", ":") for s in Filtered_image_list]

  
for image in Filtered_image_list[:1]:
    
    Current_img_CVEs_bytes = subprocess.check_output(f"./CVEs-to-CSVs.sh {image.strip()}", shell=True)   # run grype for each image

    Current_img_CVEs_json = json.loads(Current_img_CVEs_bytes.decode('utf8'))

                                                                                                         # resulting csv to dataframe
    Current_img_CVEs_df = pd.json_normalize(Current_img_CVEs_json)

    columns_list = Current_img_CVEs_df.columns.values.tolist()

with open("fields-list.txt", "w") as textfile:
    for element in columns_list:
        textfile.write(element + "\n")
